#!/bin/bash
# Vaminfo - A simple system fetch tool made just for VamoraOS 💙
# Author: TheVamoraProject
# License: MIT

# ─────────────────────────────────────────────
# Paths and version check helpers
INSTALL_PATH="/usr/bin/vaminfo"
LOCAL_INFO="/etc/VamoraSys/VaminfoInfo.vmf"
REMOTE_INFO="https://raw.githubusercontent.com/TheVamoraProject/Vaminfo/main/VaminfoInfo.vmf"

get_version() {
    if [ -f "$1" ]; then
        grep -oP '(?<=VAMINFO_VERSION=").*(?=")' "$1"
    else
        echo "0"
    fi
}

# ─────────────────────────────────────────────
# System info variables (use your existing $DISTRO, $CPU, etc.)
USER=$(whoami)
HOSTNAME=$(hostname)
OS=$DISTRO
KERNEL=$(uname -r)
CPU=$CPU
MEM=$MEM
GPU=$GPU
UPTIME=$(uptime -p)
SHELL=$SHELL

# ─────────────────────────────────────────────
# Banner
print_info() {
    echo -e "💙 Vaminfo - System Info for VamoraOS 💙"
    echo -e "───────────────────────────────────────"
    echo " User:      $USER@$HOSTNAME"
    echo " Distro:    $OS"
    echo " Kernel:    $KERNEL"
    echo " CPU:       $CPU"
    echo "󰍛 Memory:    $MEM"
    echo "󰍹 GPU:       $GPU"
    echo "󰔠 Uptime:    $UPTIME"
    echo " Shell:     $SHELL"
    echo "───────────────────────────────────────"
}

# ─────────────────────────────────────────────
# Update function
update_vaminfo() {
    echo "🔎 Checking for updates from GitHub..."

    # Get local + remote version numbers
    LOCAL_VER=$(get_version "$LOCAL_INFO")
    REMOTE_VER=$(curl -s "$REMOTE_INFO" | grep -oP '(?<=VAMINFO_VERSION=").*(?=")')

    if [ -z "$REMOTE_VER" ]; then
        echo "❌ Failed to check latest version."
        exit 1
    fi

    if [ "$REMOTE_VER" != "$LOCAL_VER" ]; then
        echo "⬇️  New version available: $REMOTE_VER"
        echo "Updating vaminfo..."
        TMPDIR=$(mktemp -d)
        git clone https://github.com/TheVamoraProject/Vaminfo.git "$TMPDIR"
        if [ -f "$TMPDIR/vaminfo" ]; then
            sudo mv "$TMPDIR/vaminfo" "$INSTALL_PATH"
            sudo chmod +x "$INSTALL_PATH"
            echo "✅ Updated to version $REMOTE_VER!"
            echo "VAMINFO_VERSION=\"$REMOTE_VER\"" | sudo tee "$LOCAL_INFO" > /dev/null
        else
            echo "❌ Failed: update script not found in repo."
        fi
        rm -rf "$TMPDIR"
    else
        echo "✅ Already up to date (version $LOCAL_VER)."
    fi
}

# ─────────────────────────────────────────────
# Usage
show_help() {
    echo "Vaminfo - A simple system fetch tool made just for VamoraOS 💙"
    echo
    echo "Usage: vaminfo [options]"
    echo
    echo "Options:"
    echo "  --help, -h      Show this help message"
    echo "  --version, -v   Show version info"
    echo "  --update, -u    Update vaminfo to latest version"
    exit 0
}

# ─────────────────────────────────────────────
# Argument handling
case "$1" in
    -h|--help)
        show_help
        ;;
    -v|--version)
        if [ -f "$LOCAL_INFO" ]; then
            VER=$(get_version "$LOCAL_INFO")
            echo "vaminfo version $VER"
        else
            echo "vaminfo version unknown (no local version file)"
        fi
        ;;
    -u|--update)
        update_vaminfo
        ;;
    "" )
        print_info
        ;;
    * )
        echo "❌ Unknown option: $1"
        show_help
        ;;
esac
